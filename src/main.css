/* oml this is quite the mess */

:root {
  --main-bg: rgb(32, 38, 51);
  --text: var(--highlight);

  --container: rgb(67, 70, 100);
  --container-selected: var(--container-alt);
  --container-selected-outline: var(--accent);
  --container-alt: color-mix(in srgb, var(--container) 60%, black);
  --container-alt-text: var(--highlight);
  --viewport-ui: var(--container);

  --active-window-outline: none;
  --inactive-window-outline: var(--main-bg);
  --active-draggable-window-outline: var(--outline);
  --inactive-draggable-window-outline: var(--outline);

  --panel: color-mix(in srgb, var(--container) 36%, black);
  --panel-content: var(--container);

  --empty-area: var(--panel);
  --filled-area: none;

  --menu-bar: rgb(103, 88, 146);
  --menu-bar-alt: var(--container-alt);
  --menu-bar-text: var(--highlight);
  --menu-bar-outline: var(--outline);

  --input: var(--medium-shadow);
  --input-text: var(--highlight);
  --input-text-alt: var(--input-text);
  --input-outline: var(--input);
  --popup-outline: var(--outline);

  --curvature: 8px;
  --half-curvature: calc(var(--curvature) * 0.5);

  --accent: rgb(79, 195, 255);
  --no-accent: rgb(255, 255, 255, 0.25);
  --highlight: white;
  --outline: black;
  --line: var(--outline);
  --box-shadow: none;
  --drop-shadow: none;
  --icon-invert: 0;
  --icon-filter: invert(var(--icon-invert)) drop-shadow(var(--drop-shadow));

  --light-shadow: rgba(0, 0, 0, 0.3);
  --medium-shadow: rgba(0, 0, 0, 0.4);
  --dark-shadow: rgba(0, 0, 0, 0.6);

  --main-font: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  --alt-font: monospace;

  --input-text-outline:
    2px 0 0 var(--input), -2px 0 0 var(--input), 0 2px 0 var(--input), 0 -2px 0 var(--input),
    1.4px 1.4px 0 var(--input), -1.4px 1.4px 0 var(--input), -1.4px -1.4px 0 var(--input),
    1.4px -1.4px 0 var(--input);
}

html,
body,
.appRoot {
  height: 100vh;
  margin: 0;
  padding: 0;
}

* {
  border: none;
}

body {
  background: var(--main-bg);
  background-repeat: no-repeat;
  background-attachment: fixed;
  margin: 0;
  font-family: var(--main-font);
  color: var(--text);
}

button,
input,
select,
label:has(> img) {
  font-weight: bolder;
  background-color: var(--input);
  box-shadow: var(--box-shadow);
  color: var(--input-text);
  outline: 2px solid var(--input-outline);
  border-radius: calc(var(--half-curvature) + 1px);
  outline-offset: -1px;
  margin: 3px;
  font-family: var(--main-font);
}

input {
  font-family: var(--alt-font);
}

input[type='checkbox'] {
  position: relative;
  appearance: none;
  display: grid;
  place-content: center;
  margin: 4px;
  width: 20px;
  height: 20px;
}

input[type='checkbox']:checked {
  background-color: var(--accent);
}

input[type='checkbox']:checked::before {
  position: absolute;
  content: '';
  margin: 2px;
  width: 16px;
  height: 16px;
  background-color: var(--input);
  clip-path: polygon(17% 32%, 42% 49%, 71% 2%, 100% 24%, 51% 97%, 0% 65%);
}

input[type='checkbox']:checked::after {
  position: absolute;
  content: '';
  margin: 2px;
  width: 16px;
  height: 16px;
  background-color: var(--input-text);
  clip-path: polygon(22% 45%, 46% 60%, 73% 16%, 87% 25%, 50% 83%, 12% 60%);
}

button:hover:enabled,
input:hover:enabled,
select:hover:enabled,
label:has(> img):has(+ input:enabled):hover {
  outline: 2px solid var(--highlight);
  outline-offset: 1px;
  cursor: pointer;
}

input::placeholder {
  color: var(--outline);
  opacity: 0.7;
}

button > img,
label > img {
  margin: 0;
  padding: 0;
  background: none;
  image-rendering: auto;
  filter: var(--icon-filter);
}

button:has(> img),
label:has(> img) {
  display: inline-flex;
  padding: 0;
}

label:has(+ input:disabled) > img {
  filter: brightness(0.4);
}

label:has(+ input:checked) > img {
  /* https://codepen.io/sosuke/pen/Pjoqqp for #4fc3ff (--accent) */
  /* Not a permanent solution */
  filter: brightness(0) saturate(100%) invert(74%) sepia(10%) saturate(7451%) hue-rotate(172deg)
    brightness(101%) contrast(101%);
}

.appRoot {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  gap: 6px;
}

.appRoot > * {
  margin: 0;
}

.window {
  position: relative;
  display: flex;
  width: 100%;
  margin: 0;
  padding: 4px;
  overflow: hidden;
  outline: 2px solid var(--inactive-window-outline);
  outline-offset: -2px;
  border-radius: calc(var(--curvature) + 4px);
}

.window.active {
  outline: 2px solid var(--active-window-outline);
  outline-offset: 0;
}

.SkinManager {
  display: flex;
  flex: 1;
  min-height: 0;
  padding: 0 4px 4px;
  gap: 2px;
}

.MenuBar {
  width: 100%;
  height: 30px;
  background: var(--menu-bar);
  padding: 0;
  outline: 2px solid var(--outline);
  box-shadow: var(--box-shadow);
}

.hidden {
  display: none;
}

.MenuBar button,
.MenuBar span,
.MenuBar span p {
  background: none;
  height: 30px;
  margin: 0;
  padding: 0 12px;
  outline: none;
  box-shadow: none;
  color: var(--menu-bar-text);
}

.MenuBar span {
  display: flex;
  flex-flow: nowrap;
  margin: 0;
  padding: 0;
}

.MenuBar span button {
  flex: 1;
}

.MenuBar span p {
  text-align: center;
  padding: 3px 0;
  aspect-ratio: 1 / 1;
  user-select: none;
}

.MenuBar > div {
  width: min-content;
  display: inline-block;
}

.MenuBar button.active {
  position: relative;
  background: var(--container-alt);
  outline: 2px solid var(--menu-bar-outline);
  border-radius: 0;
  outline-offset: 0;
}

.MenuBar button.active::after {
  content: '';
  position: absolute;
  display: block;
  margin-left: -12px;
  margin-top: 5px;
  height: 0;
  width: 100%;
  outline: 1px solid var(--menu-bar-alt);
  outline-offset: -1px;
  z-index: 101;
}

.MenuBar .popup {
  position: absolute;
  padding: 0;
}

.MenuBar .popup > div {
  position: absolute;
  margin: 0;
  z-index: 100;
  background: var(--menu-bar-alt);
  display: flex;
  flex-direction: column;
  outline: 2px solid var(--menu-bar-outline);
  border-bottom-left-radius: var(--half-curvature);
  border-bottom-right-radius: var(--half-curvature);
}

.MenuBar button:enabled:hover:not(.active) {
  background: var(--light-shadow);
  outline: none;
}

.MenuBar button {
  white-space: nowrap;
  text-align: left;
}

.preferences {
  width: 500px;
}

.Preview img {
  margin-bottom: -4px;
  border-radius: var(--half-curvature);
}

img {
  width: 48px;
  height: 48px;
  image-rendering: pixelated;
  background-image: url('assets/checkerboard.png');
  background-size: 12px;
}

span {
  display: flex;
  flex-flow: wrap;
}

hr {
  outline: 1px solid var(--line);
  width: calc(100% - 16px);
  margin: 0 auto;
}

.container {
  display: flex;
  flex-direction: column;
  background-color: var(--container);
  box-shadow: var(--box-shadow);
  outline: 2px solid var(--outline);
  border-radius: var(--curvature);
  padding: 5px;
}

.container p,
.container label {
  margin: 3px;
  overflow: hidden;
}

.container span {
  width: 100%;
}

.stack {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  flex: 1;
}

.paperdoll {
  overflow: hidden;
  background-color: var(--viewport-ui);
}

.viewport-ui {
  position: absolute;
  max-width: calc(100% - 10px);
  height: calc(100% - 10px);
  justify-content: space-evenly;
  pointer-events: none;
  display: flex;
  overflow: hidden;
}

.viewport-ui input,
.viewport-ui button,
.viewport-ui label,
.viewport-ui select,
.viewport-ui option {
  pointer-events: initial;
}

.viewport-ui button > img,
.viewport-ui label > img {
  width: 32px;
  height: 32px;
}

.viewport-ui button:has(> img),
.viewport-ui label:has(> img) {
  display: inline-flex;
  padding: 4px;
}

.viewport-ui > span {
  flex-wrap: nowrap;
  pointer-events: initial;
  overflow: auto hidden;
  height: 48px;
}

.viewport-ui > span > div:first-child {
  background-color: var(--viewport-ui);
  border-bottom-right-radius: var(--curvature);
  box-shadow: var(--box-shadow);
  padding: 4px 8px;
  margin-right: 8px;
}

.viewport-ui > span > * {
  max-height: 28px;
  padding: 4px 0;
}

.viewport-ui > span * {
  white-space: nowrap;
  min-width: max-content;
}

.settings-ribbon {
  gap: 12px;
}

.settings-ribbon label {
  color: var(--container-alt-text);
}

.settings-ribbon > span {
  width: min-content;
}

.panel {
  margin: 52px 0 0;
  filter: drop-shadow(var(--drop-shadow));
  height: 100%;
}

.panel > button {
  position: absolute;
  left: -24px;
  height: 24px;
  width: min-content;
  aspect-ratio: 1/1;
  float: right;
  margin: 0;
  background-color: var(--panel);
  color: var(--text);
  box-shadow: none;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  outline: none;
}

.panel-content {
  padding: 8px;
  background-color: var(--panel);
  width: 300px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  border-bottom-left-radius: var(--curvature);
  max-height: calc(100% - 104px);
  overflow-y: auto;
  pointer-events: initial;
}

.panel-content .container {
  background-color: var(--panel-content);
}

.paperdoll-canvas-container {
  display: block;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.paperdoll-canvas {
  background-color: var(--container-alt);
  border-radius: calc(var(--curvature) * 0.67);
  box-shadow: inset var(--box-shadow);
  image-rendering: pixelated;
}

.model-toggles {
  border-spacing: 10px;
  margin: auto;
}

.model-toggles td {
  padding: 0;
  margin: 0;
}

.model-toggles div {
  padding: 0;
  margin: 0;
  margin: auto;
}

.model-toggles input {
  padding: 0;
  margin: 0;
  width: 100%;
  height: 100%;
  background: none !important;
}

.model-toggles input::after,
.model-toggles input::before {
  display: none;
}

.model-toggles input:checked {
  outline: 2px solid var(--accent);
}

.model-toggles input:checked:hover {
  border: 2px solid var(--highlight);
}

.model-toggles input.inner {
  position: absolute;
  width: calc(100% - 20px);
  height: calc(100% - 20px);
  margin: 10px;
  background: var(--input);
  border-radius: calc(var(--curvature) * 0.25);
}

.layereditor-canvas {
  height: 512px;
  width: 512px;
  image-rendering: pixelated;
  cursor: crosshair;
}

.LayerManager {
  display: flex;
  flex-direction: column;
  gap: 8px;
  width: 100%;
}

.LayerManager > span > * {
  margin: 0;
}

.root-layer-list {
  display: block;
  background: var(--empty-area) !important;
  outline: 2px solid var(--outline) !important;
  border-radius: calc(var(--curvature) + 2px);
  height: 100%;
  width: 100%;
  overflow: hidden auto;
}

.root-layer-list > .layer-list > .manager-layer {
  outline-offset: -2px;
}

.layer-list {
  flex: 1;
  flex-direction: column-reverse;
  background: var(--empty-area);
  box-shadow: inset var(--box-shadow);
  outline: none;
  padding: 0;
  margin: 0;
  position: relative;
}

.layer-list > hr {
  padding: 0;
  position: relative;
  height: 0;
  outline: none;
  z-index: 2;
  overflow: visible;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dragover {
  pointer-events: initial;
}

.dragover * {
  pointer-events: none;
}

.layer-list.dragover > hr::after,
.root-layer-list.dragover > .layer-list > hr::after {
  content: '';
  position: absolute;
  display: block;
  height: 4px;
  width: 100%;
  background-color: var(--accent);
  box-shadow: 0 0 4px 2px var(--accent);
  z-index: 2;
}

.manager-layer {
  position: relative;
  flex-direction: column;
  padding: 3px;
  margin: 2px;
  pointer-events: initial;
  user-select: none;
  z-index: 1;
  cursor: grab;
}

.manager-layer > * {
  pointer-events: none;
}

.manager-layer.selected {
  background-color: var(--container-selected);
}

.manager-layer::after {
  content: '';
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  outline: none;
  outline-offset: -2px;
  pointer-events: none;
}

.manager-layer.selected {
  outline: 2px solid var(--container-selected-outline);
}

.manager-layer:hover:not(:has(.manager-layer:hover))::after {
  outline: 2px solid var(--highlight);
}

.manager-layer:has(.popup) {
  z-index: 2;
}

.manager-layer.dragging {
  opacity: 0.5;
}

.manager-layer-buttons {
  display: flex;
  flex-direction: column;
}

.manager-layer-buttons > button,
.manager-layer-colors > .color-picker-parent {
  width: 20px;
  height: 20px;
  margin: 2px;
}

.manager-layer-colors {
  height: 100%;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
}

.manager-layer > span {
  height: 50px;
  flex-wrap: nowrap;
}

.manager-layer > span > * {
  pointer-events: initial;
}

.manager-layer > span > img {
  pointer-events: none;
  border-radius: var(--half-curvature);
}

.manager-layer > hr {
  margin-bottom: 4px;
}

.manager-layer .properties-list {
  pointer-events: all;
  cursor: initial;
}

.manager-layer .color-picker {
  cursor: initial;
}

.manager-layer > .sublayers {
  margin: 8px 4px 8px 12px;
}

.sublayers .layer-list {
  width: 100%;
  outline: none;
  overflow: visible;
  padding-bottom: 2px;
}

.layer-list:has(.manager-layer) {
  background: var(--filled-area);
}

.sublayers .layer-list:not(:has(.manager-layer)) {
  min-height: 32px;
  pointer-events: initial;
}

.sublayers .manager-layer {
  margin-bottom: 0;
}

span.layerTitle {
  height: auto;
  flex-wrap: nowrap;
  margin-bottom: 4px;
  pointer-events: none;
  border-radius: calc(var(--curvature) * 1);
}

span.layerTitle input,
span.layerTitle p {
  margin-right: 6px;
  cursor: text;
}

span.layerTitle input[type='text'],
span.layerTitle p {
  min-width: 0;
  flex-grow: 1;
  white-space: nowrap;
  text-overflow: ellipsis;
}

span.layerTitle button {
  white-space: nowrap;
}

.layer-adder {
  height: 100%;
  width: 100%;
  overflow-y: scroll;
  overflow-x: hidden;
}

.layer-adder-content {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.properties-list {
  table-layout: fixed;
  border-spacing: 0 4px;
  width: calc(100% - 32px);
  margin: auto;
}

.properties-list tr {
  height: 100%;
}

.properties-list tr * {
  margin: 0;
}

.properties-list tr > * {
  padding: 0;
}

.properties-list th {
  padding: 0;
  padding-right: 12px;
  width: 40%;
  text-align: end;
  font-weight: normal;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.properties-list td {
  height: 100%;
}

.properties-list td > * {
  width: 100%;
  height: 100%;
}

.properties-list div.dropdown {
  box-shadow: none;
  outline: none;
}

.asset-layer-list {
  flex-direction: column-reverse;
  background: var(--empty-area);
}

h3 {
  width: 100%;
  text-align: center;
}

.model-features {
  width: 100%;
  overflow-y: auto;
}

.model-features > p {
  height: max-content;
  flex-shrink: 0;
}

.color-picker-parent {
  display: flex;
  flex-direction: column;
  width: min-content;
  min-width: 18px;
  padding: 0;
  margin: 5px;
}

.color-label {
  position: relative;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  outline: 2px solid var(--input-outline);
  image-rendering: pixelated;
  /* this is needed on chrome, again, and im dumb or somethin */
  min-height: 18px;
}

.color-label.linked::before,
.color-label.linked::after {
  content: '';
  position: absolute;
  display: block;
}

.color-label.linked::before {
  width: calc(50% + 4px);
  height: calc(50% + 4px);
  top: -2px;
  right: -2px;
  clip-path: polygon(
    0% 0%,
    35.79% 0%,
    49.63% 13.84%,
    63.48% 0%,
    100% 0%,
    100% 100%,
    63.48% 100%,
    49.63% 86.16%,
    35.79% 100%,
    0% 100%
  );
  background-color: var(--input-outline);
}

.color-label.linked::after {
  width: 50%;
  height: 50%;
  top: 0;
  right: 0;
  clip-path: polygon(
    0% 0%,
    19.91% 0%,
    80.12% 80.12%,
    80.12% 0%,
    100% 0%,
    100% 100%,
    80.02% 100%,
    19.88% 19.88%,
    19.88% 80.12%,
    80.52% 0%,
    80.12% 19.88%,
    19.76% 100%,
    0% 100%
  );
  background-color: var(--input-text);
}

.color-picker {
  position: relative;
  display: none;
  height: 0;
  width: 0;
}

.color-picker > div {
  align-items: center;
  position: absolute;
  z-index: 1000;
  width: 200px;
  padding: 10px 0 10px;
  outline: 2px solid var(--popup-outline);
  box-shadow: 0 0 0 5px var(--empty-area);
}

.color-picker-top > div {
  top: 6px;
}

.color-picker-bottom > div {
  bottom: 35px;
}

.color-picker > div::before {
  content: '';
  position: absolute;
  border-style: solid;
  border-color: var(--input-outline) transparent;
  display: block;
  width: 0;
  left: 70px;
}

.color-picker > div::after,
.color-picker > div::before {
  content: '';
  position: absolute;
  border-style: solid;
  border-color: var(--container) transparent;
  display: block;
  width: 0;
  left: 90px;
}

.color-picker > div::before {
  border-color: var(--popup-outline) transparent;
}

.color-picker-top > div::after,
.color-picker-top > div::before {
  border-width: 0 10px 10px;
  top: -7px;
}

.color-picker-top > div::before {
  top: -10px;
}

.color-picker-bottom > div::after,
.color-picker-bottom > div::before {
  border-width: 10px 10px 0;
  bottom: -7px;
}

.color-picker-bottom > div::before {
  bottom: -10px;
}

.color-picker > div > input {
  width: 80%;
  height: 18px;
  margin: 4px 0 4px;
  appearance: none;
  outline: 2px solid var(--input-outline);
  image-rendering: pixelated;
}

.color-picker > div > span {
  flex-flow: nowrap;
  width: 80%;
  margin: 10px 0 10px;
  gap: 6px;
}

.color-picker > div > span > input {
  min-width: 0;
  flex: 1;
  margin: 0;
}

.color-picker > div > input::-webkit-slider-thumb,
.color-picker > div > input::-moz-range-thumb,
.slider::-webkit-slider-thumb,
.slider::-moz-range-thumb {
  appearance: none;
  width: 0;
  height: 0;
  outline: none;
  border: none;
  border-radius: 0;
  background: none;
  cursor: pointer;
}

.color-picker > div > input::-webkit-slider-thumb,
.color-picker > div > input::-moz-range-thumb {
  width: 6px;
  height: 20px;
  border: 3px solid var(--input-outline);
}

.color-picker > div > input:hover::-webkit-slider-thumb,
.color-picker > div > input:hover::-moz-range-thumb {
  border: 3px solid var(--highlight);
}

.color-picker > div > input:disabled::-webkit-slider-thumb,
.color-picker > div > input:disabled::-moz-range-thumb {
  border: 3px solid var(--input-outline);
  cursor: default;
}

.slider {
  appearance: none;
  image-rendering: pixelated;
  width: 100%;
  height: 100%;
  /* this is needed on chrome and im dumb or somethin */
  min-height: 22px;
}

.slider-label {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
  font-size: smaller;
  font-weight: bolder;
  text-shadow: var(--input-text-outline);
  color: var(--input-text);
  user-select: none;
  pointer-events: none;
}

.slider-label > * {
  width: 100%;
  background-color: transparent;
}

.dropdown {
  border-radius: var(--half-curvature);
}

.dropdown > div > hr:first-of-type {
  margin-top: 10px;
  margin-bottom: 10px;
}

.dropdown-bar {
  position: relative;
  user-select: none;
  cursor: pointer;
  justify-content: space-around;
  flex-wrap: nowrap;
  border-radius: calc(var(--curvature) * 0.25);
}

.dropdown-bar:hover {
  outline: 2px solid var(--highlight);
}

.dropdown-bar > * {
  flex-grow: 1;
  pointer-events: initial;
}

.dropdown-bar > span {
  justify-content: end;
  width: min-content;
}

.dropdown-bar > span > button:hover {
  outline: none;
}

.draggable {
  position: absolute;
  z-index: 80;
}

.draggable.container.draggable.active {
  outline: 2px solid var(--active-draggable-window-outline);
}

.draggable.container {
  outline: 2px solid var(--inactive-draggable-window-outline);
}

.draggable.focused {
  z-index: 81;
}

.draggable.fresh {
  z-index: 82;
}

.draggable > span {
  user-select: none;
  cursor: grab;
  display: flex;
  flex-direction: row;
  padding: 0;
  margin-bottom: 4px;
}

.draggable > span:active {
  cursor: grabbing;
}

.draggable > span > p {
  flex: 1;
  margin: 0;
  padding: 0;
  font-weight: bold;
}

.draggable > span > button {
  margin: 0;
}

.draggable > hr {
  margin-bottom: 4px;
}

.grid-select {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: 100%;
}

.grid-select > * {
  margin: 3px;
  padding: 0;
  height: auto;
  cursor: pointer;
  background: none;
  background-color: var(--light-shadow);
  border-radius: var(--half-curvature);
}

.grid-select > .highlighted::before {
  position: absolute;
  content: '';
  width: 100%;
  height: 100%;
  outline: 4px solid var(--accent);
  box-shadow: 0 0 12px 4px var(--dark-shadow) inset;
  outline-offset: -4px;
  pointer-events: none;
}

.grid-select > *:hover::before {
  position: absolute;
  content: '';
  width: 100%;
  height: 100%;
  background: var(--medium-shadow);
  outline: 2px solid var(--highlight);
  outline-offset: -2px;
  pointer-events: none;
}

.grid-select > .highlighted:hover::before {
  outline: 4px solid var(--accent);
  outline-offset: -4px;
}

.grid-select > .true-option {
  position: relative;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

.grid-select > .true-option > img {
  padding: 0;
  height: auto;
  width: 100%;
  background: none;
}

.grid-select > .none-option {
  display: flex;
  position: relative;
  justify-content: center;
  align-items: center;
}

.grid-select > .none-option > img {
  position: absolute;
  padding: 0;
  height: 100%;
  width: auto;
  image-rendering: auto;
  background: none;
}

*:disabled {
  cursor: default;
  font-style: italic;
  font-weight: normal;
}

label {
  user-select: none;
  cursor: pointer;
  margin: 10px 5px 0 10px;
}

label:has(+ input:disabled) {
  cursor: default;
}

.left {
  position: absolute;
  left: 0;
}

.right {
  position: absolute;
  right: 0;
}

.top {
  position: absolute;
  top: 0;
}

.bottom {
  position: absolute;
  bottom: 0;
}

.vertical {
  display: flex;
  justify-content: center;
}

.horizontal {
  display: flex;
  align-items: center;
}

.center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.spread {
  display: flex;
  justify-content: space-evenly;
}

.stretch {
  flex-flow: nowrap;
  gap: 6px;
}

.stretch > * {
  flex: 1;
  margin: 0 0 6px;
}

.not-allowed {
  cursor: not-allowed;
}
